
画面設計・構成要素 {#constitution}
====================================


基本的な要求 {#const-demand}
------------------------------

*   単一のメインのウィンドウフレームに各パーツを配置する。
*   起動直後、位置・サイズ情報を読み込んで各パーツをウィンドウズフレーム上に
    配置する。
*   ユーザーの操作によって外観(配置・サイズ)をある程度自由に変更できる。
*   ユーザーが使い易くなるように、設定を準備する。


外観の構成要素 {#const-const}
-------------------------------

/de novo/ソフトの外観の構成として、次の要素を持っている。

*   ウィンドウフレーム
*   メニューバー
*   ツールバー
*   ステータスバー
*   /View/ウィンドウ

以下の節で各々の要素について説明する。


ウィンドウフレーム {#const-frame}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/de novo/ソフトはGUIのトップレベルに全てのパーツを収めるフレームを持っている。
このフレームをウィンドウフレームと呼ぶ。


メニューバー {#const-menu}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ウィンドウフレームの最上段にはメニューバーが配置されている。
数多くのGUIアプリケーションと同様に、メニューバーのメニューを選択することによって
様々な操作ができる。メニューは次のものが含まれる。

File:
    主にソフト全体に渡る操作に関するメニュー。
    *   ファイルやプロジェクトに関する読み込み・保存
    *   最近ロードしたファイルや分子の読み出し
    *   分子や低分子の読み込み・保存
    *   印刷やソフトの終了等の操作
    *   ワークスペースの作成・変更・削除・保存
    *   プロファイルの保存・読み出し
    
Edit:
    主にソフト内での編集に関するメニュー。
    *   アンドゥ、リドゥ、カット、コピー、ペースト等の編集に関する操作
    *   環境設定

View:
    *   各Viewウィンドウの表示・非表示の切替え

Project:
    プロジェクトに関する操作
    *   プロジェクトの選択・作成・削除・管理
    *   プロジェクトを開く(/de novo/、MD、QM、CPMD、Docking)

Help:
    *   チュートリアル
    *   マニュアル
    *   ライセンス登録
    *   About...

メニューの中にはさらにメニューアイテムがあり、これらは属性を持っている。
属性は、ノーマル、チェック、サブメニューがあり、これらの属性によって
メニューアイテムの挙動が変わる。

ノーマルは、メニューアイテムを選択すると、イベントが実行される。
チェックは、表示・非表示の切り替えといったものに用いられる。
現在の状態がチェックされてるかどうかによって判別できる利点を持っている。
サブメニューは、メニューアイテムを複数持っており、
これはメニューと全く同じ機能である。


ツールバー {#const-tool}
~~~~~~~~~~~~~~~~~~~~~~~~~~
メニューバーのすぐ下に配置されている。
アイコンによって簡単に各機能・操作にアクセスすることができる。
ドラッグドロップによって別の位置に移動させることもできる。


ステータスバー {#const-status}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
メニューバーの最下段に配置されている。
情報を表示する。具体的な使い方は検討中である。


Viewウィンドウ {#const-view}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Viewウィンドウとは、内部データや状態の表示、入力を請け負うウィンドウである。
GUI構成要素における *View* はMVCモデルのViewとは異なるので注意すること。
Viewウィンドウは目的に応じていくつかの種類がある。
例として次のものを挙げる。

FlowChartView:
    プロジェクトのフローチャートを表示する。
WizardView:
    フローチャートの各段階における設定項目の表示してユーザーからの入力を受け取る。
WorkspaceView:
    現在のワークスペース、プロジェクト、選択されている分子を表示する。
Sequence:
    アミノ酸配列や原子を表示する。
MolcularView:
    低分子やタンパク質を表示する。また、インタラクティブに分子を操作できる。   
ShellView:
    コマンドを送って各種操作をコマンドラインのように実行できるコンソール。

Viewウィンドウはユーザーの操作によって、配置情報等の属性を変化させる。
Viewウィンドウが持っている性質は次の通りである。

*   Viewウィンドウの表示・非表示。
*   Viewウィンドウをウィンドウフレームから浮かせて、
    単独単独のウィンドウとして扱うことができる。
*   ユーザーがウィンドウフレームの好きな場所
    (上下左右の端。移動先が制限されているViewもある。)移動させることができる。
*   それぞれのViewはタブを持っており、操作はタブを介して行われる。

ただし、全てのViewウィンドウが上記リストの機能を持っているとは限らない。


プロジェクトとワークスペース {#const-project}
-----------------------------------------------

/de novo/ソフトでは最初にプロジェクトを選択して作業を開始する。
プロジェクトはワークスペースと呼ばれる作業領域の
トップレベルのツリーに配置される。
そして、その下にロードした分子や、現在の状態等が表示される。
さらに、他のワークスペースを作成して、
そこでは別のプロジェクトと分子をロードさせることができる。
それぞれの作業領域は別のものであるが、
ユーザーの操作によって様々な情報を相互に受け渡すことが可能になる。

本節では、このようなプロジェクトとワークスペースの概念について説明する。


プロジェクト {#const-project}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
プロジェクトとは、



ワークスペース {#const-workspace}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ワークスペースとは、

*   複数のプロジェクトを同時に進行させることが可能となる。
*   基本的に、ひとつのプロジェクトにつき、ワークスペース一つに対応する。


Viewウィンドウの配置と操作 {#const-project}
-----------------------------------------------
